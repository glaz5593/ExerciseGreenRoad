// Generated by view binder compiler. Do not edit!
package com.example.exercisegreenroad.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.example.exercisegreenroad.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemGlocationFullBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivType;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvDescription2;

  @NonNull
  public final TextView tvTime;

  @NonNull
  public final TextView tvTime2;

  private ItemGlocationFullBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivType,
      @NonNull TextView tvDescription, @NonNull TextView tvDescription2, @NonNull TextView tvTime,
      @NonNull TextView tvTime2) {
    this.rootView = rootView;
    this.ivType = ivType;
    this.tvDescription = tvDescription;
    this.tvDescription2 = tvDescription2;
    this.tvTime = tvTime;
    this.tvTime2 = tvTime2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemGlocationFullBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemGlocationFullBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_glocation_full, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemGlocationFullBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_type;
      ImageView ivType = rootView.findViewById(id);
      if (ivType == null) {
        break missingId;
      }

      id = R.id.tv_description;
      TextView tvDescription = rootView.findViewById(id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tv_description2;
      TextView tvDescription2 = rootView.findViewById(id);
      if (tvDescription2 == null) {
        break missingId;
      }

      id = R.id.tv_time;
      TextView tvTime = rootView.findViewById(id);
      if (tvTime == null) {
        break missingId;
      }

      id = R.id.tv_time2;
      TextView tvTime2 = rootView.findViewById(id);
      if (tvTime2 == null) {
        break missingId;
      }

      return new ItemGlocationFullBinding((ConstraintLayout) rootView, ivType, tvDescription,
          tvDescription2, tvTime, tvTime2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
